version: "3.8"

services:

  traefik:
    image: traefik:latest
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`traefik.dev.local`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      # Basic Auth - le mot de passe est 'Romain2024', généré avec htpasswd
     # - "traefik.http.middlewares.auth.basicauth.usersfile=/data/users"
    volumes:
      - ./traefik/traefik-local.yml:/traefik.yml:ro
      - ./traefik/dynamic.yml:/dynamic.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # uniquement en local
      - ./traefik/certs:/certs:ro
    networks:
    - m2

  mailpit:
    image: axllent/mailpit:latest
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.mailpit.rule=Host(`mailpit.dev.local`)"
      - "traefik.http.routers.mailpit.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.mailpit.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.mailpit.loadbalancer.server.port=8025
    ports:
      - "8025:8025"  # Interface web
      - "1025:1025"  # SMTP
    depends_on:
      - traefik
    networks:
    - m2   
 

  mysql:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-magento}
      MYSQL_USER: ${MYSQL_USER:-rootless}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-nopassword}
    volumes:
      - mysql-data:/var/lib/mysql:rw,delegated
    ports:
      - '3306:3306'
    networks:
    - m2

  phpmyadmin:
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.dev.local`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.phpmyadmin.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
    depends_on:
      - traefik
      - mysql
    links:
      - mysql
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=root
      - PMA_USER=rootless
      - PMA_PASSWORD=nopassword
    ports:
      - '8082:80'
    networks:
    - m2

  redis-cache:
    image: redis:${REDIS_VERSION:-7.0}
    volumes:
      - redis-cache-data:/data:rw,delegated
    networks:
    - m2

  redis-session:
    image: redis:${REDIS_VERSION:-7.0}
    volumes:
      - redis-session-data:/data:rw,delegated
    networks:
    - m2

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION:-8.8.0}
    command: >
      bash -c '
        if [ ! -d "plugins/analysis-phonetic" ]; then
          bin/elasticsearch-plugin install --batch analysis-phonetic;
        fi;
        if [ ! -d "plugins/analysis-icu" ]; then
          bin/elasticsearch-plugin install --batch analysis-icu;
        fi;
        exec /usr/local/bin/docker-entrypoint.sh elasticsearch;
      '
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw,delegated
    depends_on:
      - traefik
    ports:
      - '9200:9200'
    networks:
    - m2

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3.11-management}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rootless}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-nopassword}
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.dev.local`)"
      - "traefik.http.routers.rabbitmq.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.rabbitmq.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq:rw,delegated
    depends_on:
      - traefik
    networks:
    - m2

  magento:
    build:
      context: .
      dockerfile: Dockerfile-local
    hostname: magento
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.magento.rule=Host(`magento.dev.local`)"
      - "traefik.http.routers.magento.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.magento.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.magento.loadbalancer.server.port=8080
    volumes:
      - ./src:/var/www:rw,delegated
    links:
      - mailpit
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
    depends_on:
      - traefik
      - mailpit
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
    ports:
      - '8080:8080'
    networks:
    - m2
      
  varnish:
    image: varnish:${VARNISH_VERSION:-7.3}
    environment:
      VARNISH_SIZE: ${VARNISH_SIZE:-2G}
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.varnish.rule=Host(`magento.dev.local`)"
      - "traefik.http.routers.varnish.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.varnish.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.varnish.loadbalancer.server.port=80
    volumes:
      - varnish-data:/var/lib/varnish:rw,delegated
      - ./default.vcl:/etc/varnish/default.vcl:ro
    links:
      - magento
    depends_on:
      - traefik
      - magento
    networks:
    - m2
            
volumes:
  traefik-data:
  mysql-data:
  redis-cache-data:
  redis-session-data:
  elasticsearch-data:
  rabbitmq-data:
  varnish-data:

networks:
  m2:
    external: true