version: "3.8"

services:

  mailhog:
    image: mailhog/mailhog:${MAILHOG_VERSION:-latest}
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.magento-mailhog.rule=Host(`mailhog.romdev.ovh`)"
      - "traefik.http.routers.magento-mailhog.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.magento-mailhog.tls=true"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - "traefik.http.routers.magento-mailhog.tls.certresolver=letsencrypt"
      - traefik.http.services.magento-mailhog.loadbalancer.server.port=8025
    networks:
      - proxy

  mysql:
    env_file:
      - .env.prod
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-magento}
      MYSQL_USER: ${MYSQL_USER:-rootless}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-nopassword}
    volumes:
      - magento-mysql-data:/var/lib/mysql:rw,delegated
    command: >
      --innodb_buffer_pool_size=512M
      --max_allowed_packet=64M
      --innodb_log_file_size=256M
    ports:
      - '127.0.0.1:3387:3306'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 15s
      retries: 10
    networks:
      - proxy

  phpmyadmin:
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.magento-phpmyadmin.rule=Host(`magento-phpmyadmin.romdev.ovh`)"
      - "traefik.http.routers.magento-phpmyadmin.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.magento-phpmyadmin.tls=true"
      - "traefik.http.routers.magento-phpmyadmin.tls.certresolver=letsencrypt"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
    depends_on:
      - mysql
    links:
      - mysql
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - PMA_HOST=mysql
    networks:
      - proxy

  redis-cache:
    image: redis:${REDIS_VERSION:-7.0}
    volumes:
      - redis-cache-data:/data:rw,delegated
    networks:
      - proxy

  redis-session:
    image: redis:${REDIS_VERSION:-7.0}
    volumes:
      - redis-session-data:/data:rw,delegated
    networks:
      - proxy

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION:-8.8.0}
    command: >
      bash -c '
        if [ ! -d "plugins/analysis-phonetic" ]; then
          bin/elasticsearch-plugin install --batch analysis-phonetic;
        fi;
        if [ ! -d "plugins/analysis-icu" ]; then
          bin/elasticsearch-plugin install --batch analysis-icu;
        fi;
        exec /usr/local/bin/docker-entrypoint.sh elasticsearch;
      '
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - indices.id_field_data.enabled=true
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw,delegated
    ports:
      - '9200:9200'
    networks:
      - proxy

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3.11-management}
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-rootless}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-nopassword}
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.magento-rabbitmq.rule=Host(`rabbitmq.romdev.ovh`)"
      - "traefik.http.routers.magento-rabbitmq.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.magento-rabbitmq.tls=true"
      - "traefik.http.routers.magento-rabbitmq.tls.certresolver=letsencrypt"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.magento-rabbitmq.loadbalancer.server.port=15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq:rw,delegated
    networks:
      - proxy

  magento:
    build:
      context: .
      dockerfile: Dockerfile-prod
    hostname: magento
    env_file:
      - .env.prod
    volumes:
      - ./src:/var/www:rw,delegated
    links:
      - mailhog
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
    depends_on:
      - mailhog
      - mysql
      - redis-cache
      - redis-session
      - elasticsearch
      - rabbitmq
    ports:
      - '8080:8080'
    networks:
      - proxy

  varnish:
    image: varnish:${VARNISH_VERSION:-7.3}
    environment:
      VARNISH_SIZE: ${VARNISH_SIZE:-2G}
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.varnish.rule=Host(`magento.romdev.ovh`)"
      - "traefik.http.routers.varnish.entrypoints=websecure"
      # Activation de TLS
      - "traefik.http.routers.varnish.tls=true"
      - "traefik.http.routers.varnish.tls.certresolver=letsencrypt"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - traefik.http.services.varnish.loadbalancer.server.port=80
    volumes:
      - varnish-data:/var/lib/varnish:rw,delegated
      - ./default.vcl:/etc/varnish/default.vcl:ro
    links:
      - magento
    depends_on:
      - magento
    networks:
      - proxy

volumes:
  magento-mysql-data:
  redis-cache-data:
  redis-session-data:
  elasticsearch-data:
  rabbitmq-data:
  varnish-data:

networks:
  proxy:
    external: true
